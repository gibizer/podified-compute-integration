- name: make crc
  shell:
    executable: /bin/bash
    cmd: |
      export PATH=$PATH:$HOME/bin
      export PULL_SECRET=~/upstream/git/openstack-k8s-operators/pull-secret.txt
      export CPUS=10
      # 16G is not enough if meta, nova, neutron is deployed
      export MEMORY=20480
      cd ~/upstream/git/openstack-k8s-operators/install_yamls/devsetup
      make crc || true
  tags:
    - crc

- name: create env.sh
  shell:
    cmd: |
      rm -rf ~/crc-env.source
      echo 'export PATH=$PATH:$HOME/bin' >> ~/crc-env.source
      echo 'eval $(crc oc-env)' >> ~/crc-env.source
      echo 'oc login --username kubeadmin -p 12345678' >> ~/crc-env.source
      echo 'export OS_CLOUD=local-crc' >> ~/crc-env.source

- name: deploy openstack with meta operator
  shell:
    chdir: ~/upstream/git/openstack-k8s-operators/install_yamls
    executable: /bin/bash
    cmd: |
      source ~/crc-env.source
      #export OPENSTACK_REPO=https://github.com/gibizer/openstack-operator.git
      #export OPENSTACK_BRANCH=integrate-nova
      #export OPENSTACK_IMG=quay.io/gibi/openstack-operator-index:v0.0.5
      make crc_storage
      make namespace
      make input
      make openstack
      sleep 60
      make openstack_deploy

- name: Wait until glance-api is up
  shell:
    executable: /bin/bash
    cmd: |
      source ~/crc-env.source
      openstack image list
  retries: 15
  delay: 20
  register: result
  until: result.rc == 0

- name: create rabbitmq-cell1
  shell:
    executable: /bin/bash
    cmd: |
      source ~/crc-env.source
      oc apply -f ~/redhat/podified/demo-20221213/local/assets/rabbitmq-cell1.yaml 

# demo-test branch has a sample using the extra rabbitmq-cell1
- name: Deploy nova control plane with nova-operator
  shell:
    executable: /bin/bash
    chdir: ~/upstream/git/openstack-k8s-operators/install_yamls
    cmd: |
      source ~/crc-env.source
      export NOVA_REPO=https://github.com/gibizer/nova-operator.git
      export NOVA_BRANCH=demo-test
      export NOVA_IMG=quay.io/gibi/nova-operator-index:v0.0.177
      make nova
      sleep 60
      make nova_deploy

- name: Wait until nova-api is up
  shell:
    executable: /bin/bash
    cmd: |
      source ~/crc-env.source
      openstack flavor list
  retries: 15
  delay: 20
  register: result
  until: result.rc == 0

- name: create flavor
  shell:
    executable: /bin/bash
    cmd: |
      source ~/crc-env.source
      openstack flavor create --vcpus 1 --disk 0 --ram 512 c1

- name: Deploy neutron 
  shell:
    executable: /bin/bash
    chdir: ~/upstream/git/openstack-k8s-operators/install_yamls
    cmd: |
      source ~/crc-env.source
      make ovn
      sleep 60
      make ovn_deploy
      make neutron
      sleep 120
      make neutron_deploy

- name: expose rabbitmq-cell1 for nova-compute
  shell:
    executable: /bin/bash
    cmd: |
      source ~/crc-env.source
      oc expose -n openstack pod/rabbitmq-cell1-server-0  --name rabbitmq-cell1-public --type NodePort || true

- name: expose rabbitmq and mariadb for nova-scheduler
  shell:
    executable: /bin/bash
    cmd: |
      source ~/crc-env.source
      oc expose -n openstack pod/rabbitmq-server-0  --name rabbitmq-public --type NodePort || true
      # NOTE(gibi): we need to change the labels on the service as otherwise lib-common won't know which one to use
      oc expose -n openstack pod/mariadb-openstack  --name mariadb-openstack-public --type NodePort --port 3306 --target-port 3306 --labels='owner=mariadb-operator' || true

- name: Update cell_mappings DB table to use the exposed mariadb service as external nova-scheduler needs it
  shell:
    executable: /bin/bash
    cmd: |
      source ~/crc-env.source
      port=`oc get -o yaml svc/mariadb-openstack-public -o jsonpath="{.spec.ports[0].nodePort}"`
      ip=`crc ip`
      oc rsh -t mariadb-openstack mysql -u root --password=12345678 -e "update nova_api.cell_mappings set database_connection = replace(database_connection, 'openstack',\"$ip:$port\");"

- name: create nova instance dir
  shell:
    executable: /bin/bash
    cmd: |
      mkdir -p /tmp/stack/data/nova/instances
      mkdir -p /tmp/stack/nova/
      chmod og+rwx -R /tmp/stack/

- name: provide rootwrap.conf
  copy:
    src: "../../../assets/rootwrap.conf"
    dest: "/tmp/stack/nova"

- name: install nova-compute
  shell:
    executable: /bin/bash
    cmd: |
      pip install wheel 'nova<24.0.0' libvirt-python pymysql

- name: upload cirros image to glance
  shell:
    executable: /bin/bash
    cmd: |
      source ~/crc-env.source
      wget http://download.cirros-cloud.net/0.5.2/cirros-0.5.2-x86_64-disk.img
      openstack image create --container-format bare --disk-format qcow2 cirros-0.5.2-x86_64-disk --file cirros-0.5.2-x86_64-disk.img


- name: Update nova-cpu.conf and nova-sch.conf with transport_url and db connection
  shell:
    executable: /bin/bash
    cmd: |
      source ~/crc-env.source
      # compute
      port=`oc get -o=jsonpath='{.spec.ports[?(@.targetPort==5672)].nodePort}' service/rabbitmq-cell1-public`
      cell1_transport=`oc rsh nova-cell1-conductor-0 grep -e "transport_url" /etc/nova/nova.conf | head -n 1 | cut -d ' ' -f3 | sed s/rabbitmq-cell1.openstack.svc:5672/192.168.130.11:$port/g`
      crudini --set ~/redhat/podified/demo-20221213/local/assets/nova-cpu.conf DEFAULT transport_url "$cell1_transport"
      
      # scheduler
      port=`oc get -o=jsonpath='{.spec.ports[?(@.targetPort==5672)].nodePort}' service/rabbitmq-public`
      cell0_transport=`oc rsh nova-cell0-conductor-0 grep -e "transport_url" /etc/nova/nova.conf | head -n 1 | cut -d ' ' -f3 | sed s/rabbitmq.openstack.svc:5672/192.168.130.11:$port/g`
      crudini --set ~/redhat/podified/demo-20221213/local/assets/nova-sch.conf DEFAULT transport_url "$cell0_transport"
      
      port=`oc get -o yaml svc/mariadb-openstack-public -o jsonpath="{.spec.ports[0].nodePort}"`
      api_db="mysql+pymysql://nova_api:12345678@192.168.130.11:$port/nova_api"
      crudini --set ~/redhat/podified/demo-20221213/local/assets/nova-sch.conf api_database connection "$api_db"
      cell0_db="mysql+pymysql://nova_cell0:12345678@192.168.130.11:$port/nova_cell0"
      crudini --set ~/redhat/podified/demo-20221213/local/assets/nova-sch.conf database connection "$cell0_db"
  tags:
    - config

# nova-compute --config-file nova-cpu.conf
# nova-scheduler --config nova-sch.conf

# map compute
# oc rsh -t nova-cell1-conductor-0 nova-manage cell_v2 discover_hosts

# boot instance
# openstack --os-compute-api-version 2.88 server create --image cirros-0.5.2-x86_64-disk --flavor c1 --nic none vm1 --wait

